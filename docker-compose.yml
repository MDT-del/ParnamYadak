version: '3.8'

services:
  # سرویس اپلیکیشن اصلی
  app:
    build: .
    container_name: parnamyadak_app
    user: root
    restart: unless-stopped
    environment:
    - FLASK_ENV=production
    - DATABASE_URL=${DATABASE_URL}
    - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
    - REDIS_URL=redis://redis:6379/0
    - RATELIMIT_STORAGE_URL=redis://redis:6379/0

    ports:
      - "443:443"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./static/receipts:/app/static/receipts
      - ./static/product_pics:/app/static/product_pics
      - ./static/mechanic_licenses:/app/static/mechanic_licenses
      - ./static/bot_receipts:/app/static/bot_receipts
      - /etc/letsencrypt/live/panel.parnamyadak.ir/fullchain.pem:/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/panel.parnamyadak.ir/privkey.pem:/certs/privkey.pem:ro
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "--insecure", "-f", "https://localhost/license/activate"]
      interval: 30s
      timeout: 10s
      retries: 3
    command:
      [
        "gunicorn",
        "--worker-class", "eventlet",
        "-w", "1",
        "-b", "0.0.0.0:443",
        "--keyfile", "/certs/privkey.pem",
        "--certfile", "/certs/fullchain.pem",
        "gunicorn_entrypoint:app"
      ]
    networks:
      - parnamyadak_network

  # سرویس دیتابیس PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: parnamyadak_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - parnamyadak_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U parnamyadak_user -d parnamyadak_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # سرویس Redis برای کش
  redis:
    image: redis:7-alpine
    container_name: parnamyadak_redis
    hostname: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - parnamyadak_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  parnamyadak_network:
    driver: bridge
  